<% content_for :title, "Simple HERE Full Map Display" %>

<div class="ctrl-panel">
	<span id="toggle-ctrl-panel" class="glyphicon glyphicon-menu-left"></span>
	<div class="form-group">
		<label class="control-label col-sm-4" for="full"> </label>
		<div class="col-sm-9">
			<input class="btn btn-default btn-sm" type="button" id="full" value="change map size" onclick="change()">
		</div>
	</div>
</div>

<style>
	#mapContainer
	{
		width: 640px;
		height: 640px;
	}
</style>

<div id="mapContainer"></div>

<script type="text/javascript">
	/*
	author domschuette
	(C) HERE 2019
	*/
	// Check whether the environment should use hi-res maps
	var hidpi = ('devicePixelRatio' in window && devicePixelRatio > 1);

		// check if the site was loaded via secure connection
	var secure = (location.protocol === 'https:') ? true : false;
	
	// Create a platform object to communicate with the HERE REST APIs
	var platform = new H.service.Platform({
		useCIT: true,
		useHTTPS: secure,
		apikey: api_key
	}),
	defaultLayers = platform.createDefaultLayers(hidpi ? 512 : 256, hidpi ? 320 : null),
	mapContainer = document.getElementById("mapContainer"),
	fullscreen = false;

	// Instantiate a map in the 'map' div, set the base map to normal
	var map = new H.Map(document.getElementById('mapContainer'), defaultLayers.vector.normal.map, {
		center: center,
		zoom: zoom,
		pixelRatio: hidpi ? 2 : 1
	});

	// Enable the map event system
	var mapevents = new H.mapevents.MapEvents(map);

	// Enable map interaction (pan, zoom, pinch-to-zoom)
	var behavior = new H.mapevents.Behavior(mapevents);

	// Enable the default UI
	var ui = H.ui.UI.createDefault(map, defaultLayers);

	// setup the Streetlevel imagery
	platform.configure(H.map.render.panorama.RenderEngine);
	
	function change()
	{
		fullscreen = !fullscreen;
		if(fullscreen)
		{
			mapContainer.style.width = "100%";
			mapContainer.style.heigt = "100%";
		}
		else
		{
			mapContainer.style.width = "640px";
			mapContainer.style.heigt = "640px";
		}
		map.getViewPort().resize();
	}

	window.addEventListener('resize', function() { map.getViewPort().resize(); });
</script>
